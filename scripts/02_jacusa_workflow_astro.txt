#! /bin/bash

# This workflow takes fastq files and runs them through alignment and editing:
# First pass star alignment

### Run first pass star

tail -n+2 SampleAnnot.txt |
parallel -kj1 --col-sep "\t" 'sbatch --parsable --export=sample=
{2},R1=preAlignmentQC/fastp/
{1}*_R1_001_trimmed.fastq.gz,R2=preAlignmentQC/fastp/
{1}*_R3_001_trimmed.fastq.gz,index=/camp/home/wagena/gandhis/home/users/wagena/references/GRCh38/index/star/hg38.93_sjdboverhang149,bamdir=/camp/home/wagena/gandhis/home/users/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/star
~/scripts/star_first_pass_16mismatch.sh' >> jobs

# To check parallel is running correctly: tail -n+0 SampleAnnot.txt |
# parallel -kj1 --col-sep "\t" 'echo the sample was{1} and is now {2}'

## FLAG SUMMARY
# --outSAMattributesMD is crucial here for JACUSA to be run efficiently
#   (if don't have this then JACUSA needs to run this itself with the fasta
#   file. In hisat this is run with samtools calmd) intronMotif - adds some
#   utility calling the strand of a transcript over a splice junction. George
#   adds this as defauly.
# --outStd - 'standard out' sends the output to pipe. If want to use this
#   option need a piped output to follow
# --outReadsUnmapped Fastx ", # output in separate fast/fastq files the
#   unmapped/partially-mapped reads
# --outSAMtype BAM SortedByCoordinate ", # output as a sorted BAM,
# --outFilterType BySJout ", # removes spurious split reads
# --outFilterMultimapNmax 1 ", # only allows reads to be mapped to one
#   position in the genome
# --outFilterMismatchNmax 999 ", # Maximum number of mismatches per pair.
#   Large numbers switch off filter. Instead we filter
#   by "--outFilterMismatchNoverReadLmax".
# --outFilterMismatchNoverReadLmax 0.16 is defauly. We are using 0.16 to not
#   exlclude edits of interest
# --alignIntronMin 20 ", # min intron length. As per ENCODE options.
# --alignIntronMax 1000000 ", # max intron length. As per ENCODE options
#   (currently from ensembl its 1,097,903 from KCNIP4).
# --alignMatesGapMax 1000000 ", # max gap between pair mates. As per ENCODE
#   options.
# --alignSJoverhangMin 8 ", # minimum unannotated split read anchor. As per
#   ENCODE options.
# --alignSJDBoverhangMin 3 " # minimum annotated split read anchor. Default is
#   3. This is the whole purpose of using 2 passes, to allow previously
#   unnanotated junctions to be considered annotated.

#Flags used: STAR \
#--runThreadN 32 \
#--genomeDir ${index} \
#--readFilesIn ${R1} ${R2} \
#--outSAMattributes NH HI AS nM NM MD \
#--readFilesCommand zcat \
#--outFileNamePrefix "${bamdir}/${sample}_" \
#--outReadsUnmapped Fastx \
#--outSAMstrandField intronMotif \
#--outFilterType BySJout \
#--outFilterMultimapNmax 1 \
#--outFilterMismatchNmax 999 \
#--outFilterMismatchNoverReadLmax 0.16 \
#--alignIntronMin 20 \
#--alignIntronMax 1000000 \
#--alignMatesGapMax 1000000 \
#--alignSJoverhangMin 8 \
#--alignSJDBoverhangMin 3


### Filter split junction files

cat *.tab | awk '($5 > 0 && $7 > 2 && $6==0)' | cut -f1-6 | sort | uniq >
SJ.filtered.tab

# This filters out:
# - non canonical junctions (column 5 >0)
# - junctions supported by multimappers only (column 7 >0)
# - columns supported by too few reads (column 7>2)
# - remove annotated junctions as these are always included from the GTF
#   (column 6==0)
# - sort the columns and remove duplicates (sort and uniq)



### Run second pass star and samtools

tail -n+2 SampleAnnot.txt |
parallel -kj1 --col-sep "\t" 'sbatch --parsable --export=sample=
{2},R1=/camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/preAlignmentQC/fastp/{1}*_R1_001_trimmed.fastq.gz,R2=/camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/preAlignmentQC/fastp/{1}*_R3_001_trimmed.fastq.gz,index=/camp/home/wagena/gandhis/home/users/wagena/references/GRCh38/index/star/hg38.93_sjdboverhang149,bamdir=/camp/home/wagena/gandhis/home/users/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/star
~/scripts/star_16mismatch_samtools_markdup.sh' >> jobs

#
##### RUNNING JACUSA DETECT
#

### Run JACUSA collapsing the grouped samples

mkdir jacusa_detect

cd star

# Find files in same group and split them by a comma:

# Eg use the following command to fine the files and concatenote them by
# comma
find astro_asyn_?_?_Aligned_fix_sort_markdup_calmd.bam | tr '\n' ','  find
neuron_nt_?_Aligned_fix_sort_markdup_calmd.bam | tr '\n' ',' find
neuron_asyn_?_Aligned_fix_sort_markdup_calmd.bam | tr '\n' ',' 

# This can be further automated by find
# astro_asyn_?_?_Aligned_fix_sort_markdup_calmd.bam | tr '\n' ',' >
# astro_asyn_files though then would need to find a way to call this text
# filein jacusa

astro_nt="astro_nt_1_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_1_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_2_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_2_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_3_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_3_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_4_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_4_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_5_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_5_B_Aligned_fix_sort_markdup_calmd.bam"
astro_asyn="astro_asyn_1_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_1_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_2_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_2_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_3_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_3_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_4_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_4_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_5_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_5_B_Aligned_fix_sort_markdup_calmd.bam"

cocult_nt="cocult_nt_1_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_1_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_2_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_2_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_3_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_3_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_4_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_4_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_5_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_5_B_Aligned_fix_sort_markdup_calmd.bam"
cocult_asyn="cocult_asyn_1_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_1_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_2_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_2_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_3_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_3_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_4_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_4_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_5_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_5_B_Aligned_fix_sort_markdup_calmd.bam"

neuron_nt="neuron_nt_A_Aligned_fix_sort_markdup_calmd.bam,neuron_nt_B_Aligned_fix_sort_markdup_calmd.bam"
neuron_asyn="neuron_asyn_A_Aligned_fix_sort_markdup_calmd.bam,neuron_asyn_B_Aligned_fix_sort_markdup_calmd.bam"

# Call this script from within the star folder
sbatch --parsable --ntasks=1 --job-name=jacusa_detect --cpus-per-task 16 --mem=128G --time=1-00:00:00 --wrap="bash /camp/home/wagena/AIediting/scripts/jacusa_detect_collapsing_samples.sh /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect/cocult_asyn.jacusa ${cocult_asyn}"

# Cocult nt
sbatch --parsable --ntasks=1 --job-name=jacusa_detect --cpus-per-task 16 --mem=128G --time=1-00:00:00 --wrap="bash /camp/home/wagena/AIediting/scripts/jacusa_detect_collapsing_samples.sh /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect/cocult_nt.jacusa ${cocult_nt}"


#Astro asyn
sbatch --parsable --ntasks=1 --job-name=jacusa_detect --cpus-per-task 16 --mem=128G --time=1-00:00:00 --wrap="bash /camp/home/wagena/AIediting/scripts/jacusa_detect_collapsing_samples.sh /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect/astro_asyn.jacusa ${astro_asyn}"

# Astro nt
sbatch --parsable --ntasks=1 --job-name=jacusa_detect --cpus-per-task 16 --mem=128G --time=1-00:00:00 --wrap="bash /camp/home/wagena/AIediting/scripts/jacusa_detect_collapsing_samples.sh /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect/astro_nt.jacusa ${astro_nt}"

# Neuron culture alone

sbatch --parsable --ntasks=1 --job-name=jacusa_detect --cpus-per-task 16 --mem=64G --time=1-00:00:00 --wrap="bash /camp/home/wagena/AIediting/scripts/jacusa_detect_collapsing_samples.sh /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect/neuron_nt.jacusa ${neuron_nt}"
sbatch --parsable --ntasks=1 --job-name=jacusa_detect --cpus-per-task 16 --mem=64G --time=1-00:00:00 --wrap="bash /camp/home/wagena/AIediting/scripts/jacusa_detect_collapsing_samples.sh /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect/neuron_asyn.jacusa ${neuron_asyn}"



# Run jacusa_to_bed with no filters
ml Anaconda3 
ml parallel
parallel -j4 --bar '/camp/home/wagena/AIediting/scripts/jacusa_2_bed.py -e AG -z 0 -d 1 -m 0 -s 1 {} > {.}.AG.bed 2> /dev/null' ::: *.jacusa


#
# RUN JACUSA DIFFERENTIAL
#

## Astro nt verse astro asyn
ml Java/13.0.2 
cd star

sbatch --parsable --ntasks=1 --job-name=jacusa_differential --cpus-per-task 16 --mem=64G --time=1-00:00:00 --wrap="java -jar ~/bin/JACUSA_v2.0.2-RC.jar call-2 -p 16 -P FR-SECONDSTRAND -a D,Y -F 3852 -r /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_differential/astro_nt_vs_asyn.jacusa astro_nt_1_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_1_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_2_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_2_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_3_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_3_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_4_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_4_B_Aligned_fix_sort_markdup_calmd.bam,astro_nt_5_A_Aligned_fix_sort_markdup_calmd.bam,astro_nt_5_B_Aligned_fix_sort_markdup_calmd.bam astro_asyn_1_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_1_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_2_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_2_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_3_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_3_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_4_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_4_B_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_5_A_Aligned_fix_sort_markdup_calmd.bam,astro_asyn_5_B_Aligned_fix_sort_markdup_calmd.bam"
48010560

## And for cocult nt verse asyn
sbatch --parsable --ntasks=1 --job-name=jacusa_differential --cpus-per-task 16 --mem=64G --time=1-00:00:00 --wrap="java -jar ~/bin/JACUSA_v2.0.2-RC.jar call-2 -p 16 -P FR-SECONDSTRAND -a D,Y -F 3852 -r /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_differential/cocult_nt_vs_asyn.jacusa cocult_nt_1_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_1_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_2_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_2_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_3_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_3_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_4_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_4_B_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_5_A_Aligned_fix_sort_markdup_calmd.bam,cocult_nt_5_B_Aligned_fix_sort_markdup_calmd.bam cocult_asyn_1_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_1_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_2_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_2_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_3_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_3_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_4_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_4_B_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_5_A_Aligned_fix_sort_markdup_calmd.bam,cocult_asyn_5_B_Aligned_fix_sort_markdup_calmd.bam" 
48010558

# neuron_nt verse neuron_asyn
sbatch --parsable --ntasks=1 --job-name=jacusa_differential --cpus-per-task 16 --mem=64G --time=1-00:00:00 --wrap="java -jar ~/bin/JACUSA_v2.0.2-RC.jar call-2 -p 16 -P FR-SECONDSTRAND -a D,Y -F 3852 -r /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_differential/neuron_nt_vs_asyn.jacusa neuron_nt_A_Aligned_fix_sort_markdup_calmd.bam,neuron_nt_B_Aligned_fix_sort_markdup_calmd.bam neuron_asyn_A_Aligned_fix_sort_markdup_calmd.bam,neuron_asyn_B_Aligned_fix_sort_markdup_calmd.bam"
48010559






# Create VEP input files
cd AIediting/.../16_alignment

bed_files=$(find jacusa_detect/*bed jacusa_differential/*bed) #Get a list of all relevant bed files
script="/camp/home/wagena/AIediting/scripts/create_vep_input_from_bed.py"
output="./vep/all_samples_vep.tsv"

python $script $output $bed_files


# Run VEP Use output in vcf mode

cd /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/

ml purge 
ml Singularity 
# Trials
sbatch --time=12:00:00 --mem=16G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input_trial.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_trial --tab --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl --check_existing'
sbatch --time=12:00:00 --mem=16G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input_trial.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_trial_no_tab --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl --check_existing'
sbatch --time=12:00:00 --mem=16G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input_trial.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_trial_2 --tab --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl'
sbatch --time=12:00:00 --mem=16G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input_trial.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_trial_3 --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl'
sbatch --time=12:00:00 --mem=64G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_tab_flags_vcf --vcf --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl --check_existing --pubmed --buffer_size 20000 --gene_phenotype --numbers --symbol'
sbatch --time=12:00:00 --mem=64G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_tab_flags --tab --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl --check_existing'

# Trial with check-ref - needs fasta file input as well. 
sbatch --time=12:00:00 --mem=64G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_tab_flags_checkref --tab --sift b --polyphen b --canonical --check_ref --protein --biotype --af --max_af --tsl --check_existing --pubmed --buffer_size 20000 --warning_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_warning_file --gene_phenotype --numbers --symbol'

# Create trial dataset to see if VEP runs with various flags (main purpose here was to exclude flags that didn't exist with this version of vep)
sbatch --time=12:00:00 --mem=16G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/forward_strand_trials/trial_vep_input_sites_mistakes.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/forward_strand_trials/trial_vep_sites_check_ref_mistakes --tab --sift b --polyphen b --canonical --check_ref --dont_skip --fasta /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/references/Homo_sapiens.GRCh38.dna.primary_assembly.fa --protein --biotype --af --max_af --tsl --check_existing --pubmed --buffer_size 20000 --gene_phenotype --warning_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/trial_warning_file --numbers --symbol'
sbatch --time=12:00:00 --mem=16G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/forward_strand_trials/trial_vep_input_sites_mistakes.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/forward_strand_trials/trial_vep_sites_no_check_ref_mistakes --tab --sift b --polyphen b --canonical --protein --biotype --af --max_af --tsl --check_existing --pubmed --buffer_size 20000 --gene_phenotype --warning_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/trial_warning_file --numbers --symbol'


# Real command for VEP release 93.5
sbatch --time=12:00:00 --mem=64G --wrap='singularity exec --bind /camp ensembl-vep_release_93.5.sif vep --use_given_ref --dir /camp/lab/gandhis/home/users/wagena/bin/ensembl-vep/vep_data --cache --offline --force_overwrite --input_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_input.tsv --output_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_vep_results_93_tab_flags --tab --sift b --polyphen b --canonical --check_ref --dont_skip --fasta /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/references/Homo_sapiens.GRCh38.dna.primary_assembly.fa --protein --biotype --af --max_af --tsl --check_existing --pubmed --buffer_size 20000 --warning_file /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/vep/all_samples_warning_file --gene_phenotype --numbers --symbol'



--buffer_size 20000
--gene_phenotype
--show_ref_allele
--numbers
--symbol
--ref_allele
--given_ref
--used_ref
--strand
--clin_sig
Note: check_ref not available for this version of vep




###
### RUN JACUSA DETECT on individual subjects
###

mkdir /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk/16_aligment/jacusa_detect_indiv

cd /camp/home/wagena/AIediting/raw_data/astro_neuron_bulk

tail -n +3 SampleAnnot.txt | cut -f2 | parallel -kj1 'sbatch --parsable --export=EXAMPLE={} --output=/camp/home/wagena/gandhis/home/users/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect_indiv/{}.log /camp/home/wagena/gandhis/home/users/wagena/AIediting/scripts/jacusa_detect_single.sh' >> jobs


tail -n +2 SampleAnnot.txt | head -1 | cut -f2 | parallel -kj1 'sbatch --parsable --export=EXAMPLE={} --output=/camp/home/wagena/gandhis/home/users/wagena/AIediting/raw_data/astro_neuron_bulk/16_alignment/jacusa_detect_indiv/{}.log /camp/home/wagena/gandhis/home/users/wagena/AIediting/scripts/jacusa_detect_single.sh' >> jobs




















